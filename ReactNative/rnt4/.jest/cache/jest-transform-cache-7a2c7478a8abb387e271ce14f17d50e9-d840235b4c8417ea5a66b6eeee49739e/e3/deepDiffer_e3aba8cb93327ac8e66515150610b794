5f2ed0adb78fac7d8662a964d70997cf


'use strict';

var deepDiffer = function deepDiffer(one, two) {
  var maxDepth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;

  if (maxDepth === 0) {
    return true;
  }
  if (one === two) {
    return false;
  }
  if (typeof one === 'function' && typeof two === 'function') {
    return false;
  }
  if (typeof one !== 'object' || one === null) {
    return one !== two;
  }
  if (typeof two !== 'object' || two === null) {
    return true;
  }
  if (one.constructor !== two.constructor) {
    return true;
  }
  if (Array.isArray(one)) {
    var len = one.length;
    if (two.length !== len) {
      return true;
    }
    for (var ii = 0; ii < len; ii++) {
      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {
        return true;
      }
    }
  } else {
    for (var key in one) {
      if (deepDiffer(one[key], two[key], maxDepth - 1)) {
        return true;
      }
    }
    for (var twoKey in two) {
      if (one[twoKey] === undefined && two[twoKey] !== undefined) {
        return true;
      }
    }
  }
  return false;
};

module.exports = deepDiffer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlZXBEaWZmZXIuanMiXSwibmFtZXMiOlsiZGVlcERpZmZlciIsIm9uZSIsInR3byIsIm1heERlcHRoIiwiY29uc3RydWN0b3IiLCJBcnJheSIsImlzQXJyYXkiLCJsZW4iLCJsZW5ndGgiLCJpaSIsImtleSIsInR3b0tleSIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBVUE7O0FBS0EsSUFBTUEsYUFBYSxTQUFiQSxVQUFhLENBQ2pCQyxHQURpQixFQUVqQkMsR0FGaUIsRUFJUjtBQUFBLE1BRFRDLFFBQ1MsdUVBRFUsQ0FBQyxDQUNYOztBQUNULE1BQUlBLGFBQWEsQ0FBakIsRUFBb0I7QUFDbEIsV0FBTyxJQUFQO0FBQ0Q7QUFDRCxNQUFJRixRQUFRQyxHQUFaLEVBQWlCO0FBRWYsV0FBTyxLQUFQO0FBQ0Q7QUFDRCxNQUFJLE9BQU9ELEdBQVAsS0FBZSxVQUFmLElBQTZCLE9BQU9DLEdBQVAsS0FBZSxVQUFoRCxFQUE0RDtBQUUxRCxXQUFPLEtBQVA7QUFDRDtBQUNELE1BQUksT0FBT0QsR0FBUCxLQUFlLFFBQWYsSUFBMkJBLFFBQVEsSUFBdkMsRUFBNkM7QUFFM0MsV0FBT0EsUUFBUUMsR0FBZjtBQUNEO0FBQ0QsTUFBSSxPQUFPQSxHQUFQLEtBQWUsUUFBZixJQUEyQkEsUUFBUSxJQUF2QyxFQUE2QztBQUczQyxXQUFPLElBQVA7QUFDRDtBQUNELE1BQUlELElBQUlHLFdBQUosS0FBb0JGLElBQUlFLFdBQTVCLEVBQXlDO0FBQ3ZDLFdBQU8sSUFBUDtBQUNEO0FBQ0QsTUFBSUMsTUFBTUMsT0FBTixDQUFjTCxHQUFkLENBQUosRUFBd0I7QUFFdEIsUUFBTU0sTUFBTU4sSUFBSU8sTUFBaEI7QUFDQSxRQUFJTixJQUFJTSxNQUFKLEtBQWVELEdBQW5CLEVBQXdCO0FBQ3RCLGFBQU8sSUFBUDtBQUNEO0FBQ0QsU0FBSyxJQUFJRSxLQUFLLENBQWQsRUFBaUJBLEtBQUtGLEdBQXRCLEVBQTJCRSxJQUEzQixFQUFpQztBQUMvQixVQUFJVCxXQUFXQyxJQUFJUSxFQUFKLENBQVgsRUFBb0JQLElBQUlPLEVBQUosQ0FBcEIsRUFBNkJOLFdBQVcsQ0FBeEMsQ0FBSixFQUFnRDtBQUM5QyxlQUFPLElBQVA7QUFDRDtBQUNGO0FBQ0YsR0FYRCxNQVdPO0FBQ0wsU0FBSyxJQUFNTyxHQUFYLElBQWtCVCxHQUFsQixFQUF1QjtBQUNyQixVQUFJRCxXQUFXQyxJQUFJUyxHQUFKLENBQVgsRUFBcUJSLElBQUlRLEdBQUosQ0FBckIsRUFBK0JQLFdBQVcsQ0FBMUMsQ0FBSixFQUFrRDtBQUNoRCxlQUFPLElBQVA7QUFDRDtBQUNGO0FBQ0QsU0FBSyxJQUFNUSxNQUFYLElBQXFCVCxHQUFyQixFQUEwQjtBQUd4QixVQUFJRCxJQUFJVSxNQUFKLE1BQWdCQyxTQUFoQixJQUE2QlYsSUFBSVMsTUFBSixNQUFnQkMsU0FBakQsRUFBNEQ7QUFDMUQsZUFBTyxJQUFQO0FBQ0Q7QUFDRjtBQUNGO0FBQ0QsU0FBTyxLQUFQO0FBQ0QsQ0F0REQ7O0FBd0RBQyxPQUFPQyxPQUFQLEdBQWlCZCxVQUFqQiIsImZpbGUiOiJkZWVwRGlmZmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLypcbiAqIEByZXR1cm5zIHtib29sfSB0cnVlIGlmIGRpZmZlcmVudCwgZmFsc2UgaWYgZXF1YWxcbiAqL1xuY29uc3QgZGVlcERpZmZlciA9IGZ1bmN0aW9uKFxuICBvbmU6IGFueSxcbiAgdHdvOiBhbnksXG4gIG1heERlcHRoOiBudW1iZXIgPSAtMSxcbik6IGJvb2xlYW4ge1xuICBpZiAobWF4RGVwdGggPT09IDApIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAob25lID09PSB0d28pIHtcbiAgICAvLyBTaG9ydCBjaXJjdWl0IG9uIGlkZW50aWNhbCBvYmplY3QgcmVmZXJlbmNlcyBpbnN0ZWFkIG9mIHRyYXZlcnNpbmcgdGhlbS5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiBvbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIHR3byA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIFdlIGNvbnNpZGVyIGFsbCBmdW5jdGlvbnMgZXF1YWxcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiBvbmUgIT09ICdvYmplY3QnIHx8IG9uZSA9PT0gbnVsbCkge1xuICAgIC8vIFByaW1pdGl2ZXMgY2FuIGJlIGRpcmVjdGx5IGNvbXBhcmVkXG4gICAgcmV0dXJuIG9uZSAhPT0gdHdvO1xuICB9XG4gIGlmICh0eXBlb2YgdHdvICE9PSAnb2JqZWN0JyB8fCB0d28gPT09IG51bGwpIHtcbiAgICAvLyBXZSBrbm93IHRoZXkgYXJlIGRpZmZlcmVudCBiZWNhdXNlIHRoZSBwcmV2aW91cyBjYXNlIHdvdWxkIGhhdmUgdHJpZ2dlcmVkXG4gICAgLy8gb3RoZXJ3aXNlLlxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmIChvbmUuY29uc3RydWN0b3IgIT09IHR3by5jb25zdHJ1Y3Rvcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KG9uZSkpIHtcbiAgICAvLyBXZSBrbm93IHR3byBpcyBhbHNvIGFuIGFycmF5IGJlY2F1c2UgdGhlIGNvbnN0cnVjdG9ycyBhcmUgZXF1YWxcbiAgICBjb25zdCBsZW4gPSBvbmUubGVuZ3RoO1xuICAgIGlmICh0d28ubGVuZ3RoICE9PSBsZW4pIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBmb3IgKGxldCBpaSA9IDA7IGlpIDwgbGVuOyBpaSsrKSB7XG4gICAgICBpZiAoZGVlcERpZmZlcihvbmVbaWldLCB0d29baWldLCBtYXhEZXB0aCAtIDEpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvbmUpIHtcbiAgICAgIGlmIChkZWVwRGlmZmVyKG9uZVtrZXldLCB0d29ba2V5XSwgbWF4RGVwdGggLSAxKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCB0d29LZXkgaW4gdHdvKSB7XG4gICAgICAvLyBUaGUgb25seSBjYXNlIHdlIGhhdmVuJ3QgY2hlY2tlZCB5ZXQgaXMga2V5cyB0aGF0IGFyZSBpbiB0d28gYnV0IGFyZW4ndFxuICAgICAgLy8gaW4gb25lLCB3aGljaCBtZWFucyB0aGV5IGFyZSBkaWZmZXJlbnQuXG4gICAgICBpZiAob25lW3R3b0tleV0gPT09IHVuZGVmaW5lZCAmJiB0d29bdHdvS2V5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZXBEaWZmZXI7XG4iXX0=