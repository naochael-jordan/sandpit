{"version":3,"sources":["TransformPropTypes.js"],"names":["ReactPropTypes","require","deprecatedPropType","TransformMatrixPropType","props","propName","componentName","Error","DecomposedMatrixPropType","TransformPropTypes","transform","arrayOf","oneOfType","shape","perspective","number","rotate","string","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateX","translateY","skewX","skewY","transformMatrix","decomposedMatrix","rotation","module","exports"],"mappings":";;AAUA;;AAEA,IAAMA,iBAAiBC,QAAQ,YAAR,CAAvB;;AAEA,IAAMC,qBAAqBD,QAAQ,oBAAR,CAA3B;;AAEA,IAAME,0BAA0B,SAA1BA,uBAA0B,CAC9BC,KAD8B,EAE9BC,QAF8B,EAG9BC,aAH8B,EAItB;AACR,MAAIF,MAAMC,QAAN,CAAJ,EAAqB;AACnB,WAAO,IAAIE,KAAJ,CACL,uDACE,6CAFG,CAAP;AAID;AACF,CAXD;;AAaA,IAAMC,2BAA2B,SAA3BA,wBAA2B,CAC/BJ,KAD+B,EAE/BC,QAF+B,EAG/BC,aAH+B,EAIvB;AACR,MAAIF,MAAMC,QAAN,CAAJ,EAAqB;AACnB,WAAO,IAAIE,KAAJ,CACL,wDACE,iCAFG,CAAP;AAID;AACF,CAXD;;AAaA,IAAME,qBAAqB;AAiBzBC,aAAWV,eAAeW,OAAf,CACTX,eAAeY,SAAf,CAAyB,CACvBZ,eAAea,KAAf,CAAqB,EAACC,aAAad,eAAee,MAA7B,EAArB,CADuB,EAEvBf,eAAea,KAAf,CAAqB,EAACG,QAAQhB,eAAeiB,MAAxB,EAArB,CAFuB,EAGvBjB,eAAea,KAAf,CAAqB,EAACK,SAASlB,eAAeiB,MAAzB,EAArB,CAHuB,EAIvBjB,eAAea,KAAf,CAAqB,EAACM,SAASnB,eAAeiB,MAAzB,EAArB,CAJuB,EAKvBjB,eAAea,KAAf,CAAqB,EAACO,SAASpB,eAAeiB,MAAzB,EAArB,CALuB,EAMvBjB,eAAea,KAAf,CAAqB,EAACQ,OAAOrB,eAAee,MAAvB,EAArB,CANuB,EAOvBf,eAAea,KAAf,CAAqB,EAACS,QAAQtB,eAAee,MAAxB,EAArB,CAPuB,EAQvBf,eAAea,KAAf,CAAqB,EAACU,QAAQvB,eAAee,MAAxB,EAArB,CARuB,EASvBf,eAAea,KAAf,CAAqB,EAACW,YAAYxB,eAAee,MAA5B,EAArB,CATuB,EAUvBf,eAAea,KAAf,CAAqB,EAACY,YAAYzB,eAAee,MAA5B,EAArB,CAVuB,EAWvBf,eAAea,KAAf,CAAqB,EAACa,OAAO1B,eAAeiB,MAAvB,EAArB,CAXuB,EAYvBjB,eAAea,KAAf,CAAqB,EAACc,OAAO3B,eAAeiB,MAAvB,EAArB,CAZuB,CAAzB,CADS,CAjBc;;AAqCzBW,mBAAiBzB,uBArCQ;;AAyCzB0B,oBAAkBrB,wBAzCO;;AA4CzBc,UAAQpB,mBACNF,eAAee,MADT,EAEN,iCAFM,CA5CiB;AAgDzBQ,UAAQrB,mBACNF,eAAee,MADT,EAEN,iCAFM,CAhDiB;AAoDzBe,YAAU5B,mBACRF,eAAee,MADP,EAER,iCAFQ,CApDe;AAwDzBS,cAAYtB,mBACVF,eAAee,MADL,EAEV,iCAFU,CAxDa;AA4DzBU,cAAYvB,mBACVF,eAAee,MADL,EAEV,iCAFU;AA5Da,CAA3B;;AAkEAgB,OAAOC,OAAP,GAAiBvB,kBAAjB","file":"TransformPropTypes.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ReactPropTypes = require('prop-types');\n\nconst deprecatedPropType = require('deprecatedPropType');\n\nconst TransformMatrixPropType = function(\n  props: Object,\n  propName: string,\n  componentName: string,\n): ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The transformMatrix style property is deprecated. ' +\n        'Use `transform: [{ matrix: ... }]` instead.',\n    );\n  }\n};\n\nconst DecomposedMatrixPropType = function(\n  props: Object,\n  propName: string,\n  componentName: string,\n): ?Error {\n  if (props[propName]) {\n    return new Error(\n      'The decomposedMatrix style property is deprecated. ' +\n        'Use `transform: [...]` instead.',\n    );\n  }\n};\n\nconst TransformPropTypes = {\n  /**\n   * `transform` accepts an array of transformation objects. Each object specifies\n   * the property that will be transformed as the key, and the value to use in the\n   * transformation. Objects should not be combined. Use a single key/value pair\n   * per object.\n   *\n   * The rotate transformations require a string so that the transform may be\n   * expressed in degrees (deg) or radians (rad). For example:\n   *\n   * `transform([{ rotateX: '45deg' }, { rotateZ: '0.785398rad' }])`\n   *\n   * The skew transformations require a string so that the transform may be\n   * expressed in degrees (deg). For example:\n   *\n   * `transform([{ skewX: '45deg' }])`\n   */\n  transform: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOfType([\n      ReactPropTypes.shape({perspective: ReactPropTypes.number}),\n      ReactPropTypes.shape({rotate: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateX: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateY: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateZ: ReactPropTypes.string}),\n      ReactPropTypes.shape({scale: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleX: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleY: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateX: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateY: ReactPropTypes.number}),\n      ReactPropTypes.shape({skewX: ReactPropTypes.string}),\n      ReactPropTypes.shape({skewY: ReactPropTypes.string}),\n    ]),\n  ),\n\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  transformMatrix: TransformMatrixPropType,\n  /**\n   * Deprecated. Use the transform prop instead.\n   */\n  decomposedMatrix: DecomposedMatrixPropType,\n\n  /* Deprecated transform props used on Android only */\n  scaleX: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  scaleY: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  rotation: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  translateX: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  translateY: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n};\n\nmodule.exports = TransformPropTypes;\n"]}