43df14cd1faf16235efb382729a17f98


'use strict';

var EdgeInsetsPropType = require('EdgeInsetsPropType');
var ImageSourcePropType = require('ImageSourcePropType');
var ImageStylePropTypes = require('ImageStylePropTypes');
var PropTypes = require('prop-types');
var StyleSheetPropType = require('StyleSheetPropType');

module.exports = {
  style: StyleSheetPropType(ImageStylePropTypes),

  source: ImageSourcePropType,

  defaultSource: PropTypes.oneOfType([PropTypes.shape({
    uri: PropTypes.string,
    width: PropTypes.number,
    height: PropTypes.number,
    scale: PropTypes.number
  }), PropTypes.number]),

  accessible: PropTypes.bool,

  accessibilityLabel: PropTypes.node,

  blurRadius: PropTypes.number,

  capInsets: EdgeInsetsPropType,

  resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),

  resizeMode: PropTypes.oneOf(['cover', 'contain', 'stretch', 'repeat', 'center']),

  testID: PropTypes.string,

  onLayout: PropTypes.func,

  onLoadStart: PropTypes.func,

  onProgress: PropTypes.func,

  onError: PropTypes.func,

  onPartialLoad: PropTypes.func,

  onLoad: PropTypes.func,

  onLoadEnd: PropTypes.func
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,