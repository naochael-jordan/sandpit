{"version":3,"sources":["createStrictShapeTypeChecker.js"],"names":["invariant","require","merge","createStrictShapeTypeChecker","shapeTypes","checkType","isRequired","props","propName","componentName","location","propValue","propType","locationName","allKeys","rest","key","checker","JSON","stringify","Object","keys","error","message","chainedCheckType","bind","module","exports"],"mappings":";;AAUA;;AAEA,IAAMA,YAAYC,QAAQ,oBAAR,CAAlB;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;;AAEA,SAASE,4BAAT,CAAsCC,UAAtC,EAEmC;AACjC,WAASC,SAAT,CACEC,UADF,EAEEC,KAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,QALF,EAOE;AACA,QAAI,CAACH,MAAMC,QAAN,CAAL,EAAsB;AACpB,UAAIF,UAAJ,EAAgB;AACdN,kBACE,KADF,EAEE,sBAAqBQ,QAArB,sCACOC,aADP,QAFF;AAKD;AACD;AACD;AACD,QAAME,YAAYJ,MAAMC,QAAN,CAAlB;AACA,QAAMI,WAAW,OAAOD,SAAxB;AACA,QAAME,eAAeH,YAAY,WAAjC;AACA,QAAIE,aAAa,QAAjB,EAA2B;AACzBZ,gBACE,KADF,EAEE,aAAWa,YAAX,UAA6BL,QAA7B,mBAAqDI,QAArD,6BACmBH,aADnB,2BAFF;AAKD;;AAGD,QAAMK,UAAUZ,MAAMK,MAAMC,QAAN,CAAN,EAAuBJ,UAAvB,CAAhB;;AAvBA,sCADGW,IACH;AADGA,UACH;AAAA;;AAwBA,SAAK,IAAMC,KAAX,IAAkBF,OAAlB,EAA2B;AACzB,UAAMG,UAAUb,WAAWY,KAAX,CAAhB;AACA,UAAI,CAACC,OAAL,EAAc;AACZjB,kBACE,KADF,EAEE,mBAAiBQ,QAAjB,cAAmCQ,KAAnC,uBAA0DP,aAA1D,UACE,gBADF,GAEES,KAAKC,SAAL,CAAeZ,MAAMC,QAAN,CAAf,EAAgC,IAAhC,EAAsC,IAAtC,CAFF,GAGE,gBAHF,GAIEU,KAAKC,SAAL,CAAeC,OAAOC,IAAP,CAAYjB,UAAZ,CAAf,EAAwC,IAAxC,EAA8C,IAA9C,CANJ;AAQD;AACD,UAAMkB,QAAQL,0BAAQN,SAAR,EAAmBK,KAAnB,EAAwBP,aAAxB,EAAuCC,QAAvC,SAAoDK,IAApD,EAAd;AACA,UAAIO,KAAJ,EAAW;AACTtB,kBACE,KADF,EAEEsB,MAAMC,OAAN,GACE,gBADF,GAEEL,KAAKC,SAAL,CAAeZ,MAAMC,QAAN,CAAf,EAAgC,IAAhC,EAAsC,IAAtC,CAJJ;AAMD;AACF;AACF;AACD,WAASgB,gBAAT,CACEjB,KADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,QAJF,EAMU;AAAA,uCADLK,IACK;AADLA,UACK;AAAA;;AACR,WAAOV,4BAAU,KAAV,EAAiBE,KAAjB,EAAwBC,QAAxB,EAAkCC,aAAlC,EAAiDC,QAAjD,SAA8DK,IAA9D,EAAP;AACD;AACDS,mBAAiBlB,UAAjB,GAA8BD,UAAUoB,IAAV,CAAe,IAAf,EAAqB,IAArB,CAA9B;AACA,SAAOD,gBAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBxB,4BAAjB","file":"createStrictShapeTypeChecker.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\nconst merge = require('merge');\n\nfunction createStrictShapeTypeChecker(shapeTypes: {\n  [key: string]: ReactPropsCheckType,\n}): ReactPropsChainableTypeChecker {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location?,\n    ...rest\n  ) {\n    if (!props[propName]) {\n      if (isRequired) {\n        invariant(\n          false,\n          `Required object \\`${propName}\\` was not specified in ` +\n            `\\`${componentName}\\`.`,\n        );\n      }\n      return;\n    }\n    const propValue = props[propName];\n    const propType = typeof propValue;\n    const locationName = location || '(unknown)';\n    if (propType !== 'object') {\n      invariant(\n        false,\n        `Invalid ${locationName} \\`${propName}\\` of type \\`${propType}\\` ` +\n          `supplied to \\`${componentName}\\`, expected \\`object\\`.`,\n      );\n    }\n    // We need to check all keys in case some are required but missing from\n    // props.\n    const allKeys = merge(props[propName], shapeTypes);\n    for (const key in allKeys) {\n      const checker = shapeTypes[key];\n      if (!checker) {\n        invariant(\n          false,\n          `Invalid props.${propName} key \\`${key}\\` supplied to \\`${componentName}\\`.` +\n            '\\nBad object: ' +\n            JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +\n            JSON.stringify(Object.keys(shapeTypes), null, '  '),\n        );\n      }\n      const error = checker(propValue, key, componentName, location, ...rest);\n      if (error) {\n        invariant(\n          false,\n          error.message +\n            '\\nBad object: ' +\n            JSON.stringify(props[propName], null, '  '),\n        );\n      }\n    }\n  }\n  function chainedCheckType(\n    props: {[key: string]: any},\n    propName: string,\n    componentName: string,\n    location?: string,\n    ...rest\n  ): ?Error {\n    return checkType(false, props, propName, componentName, location, ...rest);\n  }\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nmodule.exports = createStrictShapeTypeChecker;\n"]}